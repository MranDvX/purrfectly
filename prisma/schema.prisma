datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  cart     Cart?     @relation(fields: [cartId], references: [id])
  cartId   String?
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Video {
  id       String @id @default(cuid())
  publicId String
  category String
  options  Json   @default("{}")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String  @id @default(cuid())
  name        String
  price       Float
  description String
  category    String
  rating      Float
  images      Image[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cartItems CartItem[]
}

model Image {
  id  String @id @default(cuid())
  url String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId String?

  adoptable   Adoptable? @relation(fields: [adoptableId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  adoptableId String?
}

model Cart {
  id        String     @id
  cartItems CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  User      User[]
}

model CartItem {
  id         String   @id @default(cuid())
  cart       Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cartId     String
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId  String
  quantity   Int
  price      Decimal
  totalPrice Decimal
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Adoptable {
  id          String  @id @default(cuid())
  name        String
  sex         String
  description String
  category    String
  status      String
  images      Image[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
